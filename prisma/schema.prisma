// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  //provider = "sqlite" /// for SQlLite
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(auto()) @map("_id") @db.ObjectId // Using MongoDB ObjectId
  name        String
  email       String @unique
  clerkUserId String @map("clerk_user_id")

  createdAt DateTime @default(now()) @map("created_at")
  chats     Chat[] // This could reference another model or be embedded

  @@map("users") // Maps to the MongoDB "users" collection
}

model Chat {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  messages String
  userId   String @map("user_id") @db.ObjectId // foreign key

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("chats") // Maps to the MongoDB "chats" collection
}

// model User {
//   id          String   @id @default(uuid()) @map("_id")
//   name        String
//   email       String
//   clerkUserId String   @map("clerk_user_id")
//   carName     String
//   createdAt   DateTime @default(now()) @map("created_at")
//   chats       Chat[]

//   @@map("users")
// }

// model Chat {
//   id        Int      @id @default(autoincrement())
//   user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId    String
//   title     String
//   messages  String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt // This automatically updates the field on every update operation

//   @@map("chats")
// }




